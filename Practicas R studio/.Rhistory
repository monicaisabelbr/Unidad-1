head(5)
install.packages("ggplot2")
library(ggplot2)
# Primero, calculamos las ventas por año
ventas_por_ano <- vgventas %>%
group_by(Year) %>%
summarise(Ventas_Globales_Anuales = sum(Global_Sales))
# Luego, creamos el gráfico
ggplot(data = ventas_por_ano, aes(x = Year, y = Ventas_Globales_Anuales)) +
geom_line() + # Gráfico de líneas
geom_point() + # Puntos en cada año
labs(title = "Evolución de las Ventas Globales de Videojuegos",
x = "Año",
y = "Ventas Globales (en millones)")
# Cuenta el número total de filas duplicadas
sum(duplicated(vgventas))
vgventas %>%
group_by(Name) %>% # Agrupa por la columna que te interesa
filter(n() > 1) %>%     # Filtra los grupos que tienen más de 1 fila
arrange(Name)          # Ordena por nombre para verlos juntos
knitr::opts_chunk$set(echo = TRUE)
vgventas <- read.csv("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
head(vgventas)
str(vgventas)
summary(vgventas)
install.packages("dplyr")
library(dplyr)
#Géneros más vendidos
vgventas %>%
group_by(Genre) %>%
summarise(Ventas_Totales = sum(Global_Sales)) %>%
arrange(desc(Ventas_Totales)) %>%
head(5)
#Plataformas más vendidas
vgventas %>%
group_by(Platform) %>%
summarise(Ventas_Totales = sum(Global_Sales)) %>%
arrange(desc(Ventas_Totales)) %>%
head(5)
#Publisher más vendidos
vgventas %>%
group_by(Publisher) %>%
summarise(Ventas_Totales = sum(Global_Sales)) %>%
arrange(desc(Ventas_Totales)) %>%
head(5)
install.packages("ggplot2")
library(ggplot2)
# Primero, calculamos las ventas por año
ventas_por_ano <- vgventas %>%
group_by(Year) %>%
summarise(Ventas_Globales_Anuales = sum(Global_Sales))
# Luego, creamos el gráfico
ggplot(data = ventas_por_ano, aes(x = Year, y = Ventas_Globales_Anuales)) +
geom_line() + # Gráfico de líneas
geom_point() + # Puntos en cada año
labs(title = "Evolución de las Ventas Globales de Videojuegos",
x = "Año",
y = "Ventas Globales (en millones)")
# Cuenta el número total de filas duplicadas
sum(duplicated(vgventas))
vgventas %>%
group_by(Name) %>% # Agrupa por la columna que te interesa
filter(n() > 1) %>%     # Filtra los grupos que tienen más de 1 fila
arrange(Name)          # Ordena por nombre para verlos juntos
vgventas$Year <- as.integer(vgventas$Year)
summary(vgventas)
vgventas$Year <- as.integer(vgventas$Year)
vgventas$Genre <- as.factor(vgventas$Genre)
summary(vgventas)
vgventas$Year <- as.integer(vgventas$Year)
vgventas$Genre <- as.factor(vgventas$Genre)
vgventas$Platform <- as.factor(vgventas$Platform)
summary(vgventas)
summary(vgventas)
vgventas$Year <- as.integer(vgventas$Year)
vgventas$Genre <- as.factor(vgventas$Genre)
vgventas$Platform <- as.factor(vgventas$Platform)
vgventas$Publisher <- as.factor(vgventas$Publisher)
summary(vgventas)
length(unique(vgventas))
length(unique(vgventas$Name))
# Asumiendo que tus datos están en 'vgsales'
vgsales %>%
group_by(Name) %>%
filter(n() > 1) %>%
arrange(Name)
# Asumiendo que tus datos están en 'vgsales'
vgventas %>%
group_by(Name) %>%
filter(n() > 1) %>%
arrange(Name)
knitr::opts_chunk$set(echo = TRUE)
vgventas <- read.csv("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
head(vgventas)
str(vgventas)
summary(vgventas)
#Géneros más vendidos
vgventas %>%
group_by(Genre) %>%
summarise(Ventas_Totales = sum(Global_Sales)) %>%
arrange(desc(Ventas_Totales)) %>%
head(5)
plot(pressure)
unique(vgventas$Name)
unique(vgventas$Name)
filter(vgventas$Name == "Wii Sports")
library(dplyr)
library(ggplot2)
unique(vgventas$Name)
filter(vgventas$Name == "Wii Sports")
unique(vgventas$Name)
filter(vgventas, Name == "Wii Sports")
data_path <- file.path("C://Users/ruben/Documents/2025/Univalle/2025-2/Practicas/VideoJuegos")
data_file <- file.path(data_path, "vgsales.csv")
data.vg.raw <- read.csv(data_file,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data_file <- file.path(data_path, "vgsales.csv")
data.vg.raw <- read.csv(data_file,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data_file <- file.path(data_path, ""C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv"")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data_file <- file.path(data_path, "C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data.vg.raw <- read.csv(data_file,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data_file <- file.path(data_path, "vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
head(data.vg.raw)
str(data.vg.raw)
summary(data.vg.raw)
data.vg <- data.vg.raw
data.vg$Platform <- factor(data.vg$Platform)
data.vg$Year <- as.numeric(data.vg$Year)
summary(data.vg)
str(data.vg.raw)
unique(data.vg.raw$Year)
filter(data.vg.raw, Year=="N/A")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data_file <- file.path(data_path, "vgsales.csv")
data.vg.raw <- read.csv(data_file,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data.vg.raw <- read.csv(data_file,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
head(data.vg.raw)
str(data.vg.raw)
#library(mrgsolve)
library(ggplot2)
library(dplyr)
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/Unidad 1/Prácticas R studio/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
head(data.vg.raw)
str(data.vg.raw)
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(data.vg)
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 1: na.omit() - Elimina filas con cualquier NA
df_sin_na <- na.omit(data.vg)
print("Con na.omit():")
print(head(df_sin_na))
cat("Filas después de na.omit():", nrow(df_sin_na), "\n\n")
# Método 2: complete.cases() - Más control
df_completo <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
df <- filter(data.vg,NA_Sales<2.5)
# Histograma agrupado por categoría
ggplot( df , aes(x = NA_Sales)) +
geom_histogram(position = "dodge", alpha = 0.7, bins = 20) +
labs(title = "Histograma Agrupado de Ventas por Año",
x = "Ventas",
df <- filter(data.vg,NA_Sales<2.5)
# Histograma agrupado por categoría
ggplot( df , aes(x = NA_Sales)) +
geom_histogram(position = "dodge", alpha = 0.7, bins = 20) +
labs(title = "Histograma Agrupado de Ventas por Ano",
x = "Ventas",
y = "Frecuencia") +
theme_minimal()
#library(mrgsolve)
library(ggplot2)
library(dplyr)
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/Unidad 1/Prácticas R studio/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
head(data.vg.raw)
str(data.vg.raw)
data.vg <- data.vg.raw
data.vg$Platform <- factor(data.vg$Platform)
data.vg$Year <- as.numeric(data.vg$Year)
summary(data.vg)
str(data.vg.raw)
unique(data.vg.raw$Year)
filter(data.vg.raw, Year =="N/A")
str(data.vg.raw)
unique(data.vg.raw$Year)
head(filter(data.vg.raw, Year =="N/A"))
unique(data.vg$Platform)
filter(data.vg, Name =="FIFA 15")
hist(data.vg$NA_Sales )
# Contar NA por columna
na_por_columna <- colSums(is.na(data.vg))
print("NA por columna:")
print(na_por_columna)
# Porcentaje de NA por columna
porcentaje_na <- colMeans(is.na(data.vg)) * 100
print("Porcentaje de NA por columna:")
print(round(porcentaje_na, 2))
lenght(unique(data.vg$Publisher))
length(unique(data.vg$Publisher))
filter(data.vg, Publisher==" ")
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 1: na.omit() - Elimina filas con cualquier NA
df_sin_na <- na.omit(data.vg)
print("Con na.omit():")
print(head(df_sin_na))
cat("Filas después de na.omit():", nrow(df_sin_na), "\n\n")
# Método 2: complete.cases() - Más control
df_completo <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 1: na.omit() - Elimina filas con cualquier NA
df_sin_na <- na.omit(data.vg)
print("Con na.omit():")
print(head(df_sin_na))
cat("Filas después de na.omit():", nrow(df_sin_na), "\n\n")
# Método 2: complete.cases() - Más control
df_completo <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 2: complete.cases() - Más control
df_completo <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 2: complete.cases() - Más control
df_completo <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
dim(data.vg)
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 2: complete.cases() - Más control
df_completo <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
dim(df_completo)
summary(df_completo$Global_Sales)
set.seed(123)
muestra <- sample_n(df_sin_na,300)
media_muestra_year <- mean(muestra$Year); media_muestra_year
sd_muestra_year <- sd(muestra$Year); sd_muestra_year
media_NA_sales <- mean(muestra$NA_Sales) ;media_NA_sales
sd_NA_sales <- sd(muestra$NA_Sales); sd_NA_sales
media_EU_sales <- mean(muestra$EU_Sales); media_EU_sales
sd_EU_sales <- sd(muestra$EU_Sales); sd_EU_sales
media_JP_sales <- mean(muestra$JP_Sales); media_JP_sales
sd_JP_sales <- sd(muestra$JP_Sales); sd_JP_sales
media_other_sales <- mean(muestra$Other_Sales); media_other_sales
sd_other_sales <- sd(muestra$Other_Sales); sd_other_sales
media_global_sales <- mean(muestra$Global_Sales) ; media_global_sales
sd_global_sales <- sd(muestra$Global_Sales); sd_global_sales
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 2: complete.cases() - Más control
df_sin_na <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
dim(df_sin_na)
summary(df_sin_na$Global_Sales)
set.seed(123)
muestra <- sample_n(df_sin_na,300)
media_muestra_year <- mean(muestra$Year); media_muestra_year
sd_muestra_year <- sd(muestra$Year); sd_muestra_year
media_NA_sales <- mean(muestra$NA_Sales) ;media_NA_sales
sd_NA_sales <- sd(muestra$NA_Sales); sd_NA_sales
media_EU_sales <- mean(muestra$EU_Sales); media_EU_sales
sd_EU_sales <- sd(muestra$EU_Sales); sd_EU_sales
media_JP_sales <- mean(muestra$JP_Sales); media_JP_sales
sd_JP_sales <- sd(muestra$JP_Sales); sd_JP_sales
media_other_sales <- mean(muestra$Other_Sales); media_other_sales
sd_other_sales <- sd(muestra$Other_Sales); sd_other_sales
media_global_sales <- mean(muestra$Global_Sales) ; media_global_sales
sd_global_sales <- sd(muestra$Global_Sales); sd_global_sales
summary(df_sin_na$Global_Sales)
hist(df_sin_na$Global_Sales)
summary(df_sin_na$Global_Sales)
hist(df_sin_na$Global_Sales)
hist(filter(df_completo, Global Sales <5)$Global_Sales)
summary(df_sin_na$Global_Sales)
hist(df_sin_na$Global_Sales)
hist(filter(df_completo, Global_Sales < 5)$Global_Sales)
summary(df_sin_na$Global_Sales)
hist(df_sin_na$Global_Sales)
hist(filter(df_sin_na, Global_Sales < 5)$Global_Sales)
1:16327
1:5
sample(1:10,2,replace = TRUE)
sample(1:10,2,replace = TRUE)
sample(1:10,2,replace = TRUE)
sample(1:10,2,replace = TRUE)
sample(1:10,2,replace = TRUE)
sample(1:10,5,replace = TRUE)
set.seed(123)
sample(1:10,5,replace = TRUE)
set.seed(123)
sample(1:10,5,replace = TRUE)
set.seed(123)
sample(1:10,5,replace = TRUE)
set.seed(123)
sample(1:10,5,replace = TRUE)
set.seed(123)
sample(1:10,5,replace = TRUE)
set.seed(123)
df_sin_na[sample(1:10,5,replace = TRUE),]
set.seed(123)
df_sin_na[sample(1:6,5,replace = TRUE),]
set.seed(123)
indices_muestra <- sample(1:6,5, replace = TRUE)
df_sin_na[indices_muestra,]
set.seed(123)
indices_muestra <- sample(1:6,5, replace = TRUE); indices_muestra
df_sin_na[indices_muestra,]
set.seed(13)
indices_muestra <- sample(1:6,5, replace = TRUE);
df_sin_na[indices_muestra,]
indices_muestra <- sample(1:6,5, replace = TRUE);
df_sin_na[indices_muestra,]
set.seed(123)
indices_muestra <- sample(1:6,5, replace = TRUE);
df_sin_na[indices_muestra,]
set.seed(123)
indices_muestra <- sample(1:16327,300, replace = TRUE);
df_sin_na[indices_muestra,]
set.seed(123)
N <- dim(df_sin_na)[1]
indices_muestra <- sample(1:N,5, replace = TRUE);
df_sin_na[indices_muestra,]
set.seed(123)
N <- dim(df_sin_na)[1]
indices_muestra <- sample(1:N,5, replace = TRUE);
data.muestra <- df_sin_na[indices_muestra,]
#library(mrgsolve)
library(ggplot2)
library(dplyr)
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/Unidad 1/Prácticas R studio/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
summary(data.vg.raw)
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADISTICA IV/Unidad 1/Practicas R studio/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADÍSTICA IV/Unidad 1/Prácticas R studio/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
#library(mrgsolve)
library(ggplot2)
library(dplyr)
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADISTICA IV/Unidad 1/Practicas R studio/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
head(data.vg.raw)
str(data.vg.raw)
summary(data.vg.raw)
data.vg <- data.vg.raw
data.vg$Platform <- factor(data.vg$Platform)
data.vg$Year <- as.numeric(data.vg$Year)
summary(data.vg)
str(data.vg.raw)
unique(data.vg.raw$Year)
head(filter(data.vg.raw, Year =="N/A"))
unique(data.vg$Platform)
filter(data.vg, Name =="FIFA 15")
hist(data.vg$NA_Sales )
# Contar NA por columna
na_por_columna <- colSums(is.na(data.vg))
print("NA por columna:")
print(na_por_columna)
# Porcentaje de NA por columna
porcentaje_na <- colMeans(is.na(data.vg)) * 100
print("Porcentaje de NA por columna:")
print(round(porcentaje_na, 2))
length(unique(data.vg$Publisher))
filter(data.vg, Publisher==" ")
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 2: complete.cases() - Más control
df_sin_na <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_completo))
cat("Filas después de complete.cases():", nrow(df_completo), "\n")
dim(df_sin_na)
summary(df_sin_na$Global_Sales)
hist(df_sin_na$Global_Sales)
hist(filter(df_sin_na, Global_Sales < 5)$Global_Sales)
set.seed(123)
N <- dim(df_sin_na)[1]
indices_muestra <- sample(1:N,200, replace = TRUE);
data.muestra <- df_sin_na[indices_muestra,]
summary(data.muestra)
#library(mrgsolve)
library(ggplot2)
library(dplyr)
data_path <- file.path("C:/Users/isabe/OneDrive - Universidad Privada del Valle/4TO SEMESTRE/ESTADISTICA IV/Unidad 1/Practicas R studio/vgsales.csv")
data.vg.raw <- read.csv(data_path,
stringsAsFactors = F,na.strings = ".",header = T,sep=",")
head(data.vg.raw)
str(data.vg.raw)
summary(data.vg.raw)
data.vg <- data.vg.raw
data.vg$Platform <- factor(data.vg$Platform)
data.vg$Year <- as.numeric(data.vg$Year)
summary(data.vg)
str(data.vg.raw)
unique(data.vg.raw$Year)
head(filter(data.vg.raw, Year =="N/A"))
unique(data.vg$Platform)
filter(data.vg, Name =="FIFA 15")
hist(data.vg$NA_Sales )
# Contar NA por columna
na_por_columna <- colSums(is.na(data.vg))
print("NA por columna:")
print(na_por_columna)
# Porcentaje de NA por columna
porcentaje_na <- colMeans(is.na(data.vg)) * 100
print("Porcentaje de NA por columna:")
print(round(porcentaje_na, 2))
length(unique(data.vg$Publisher))
filter(data.vg, Publisher==" ")
# DataFrame de ejemplo con missing values
print("DataFrame original:")
print(head(data.vg))
cat("Filas originales:", nrow(data.vg), "\n\n")
# Método 2: complete.cases() - Más control
df_sin_na <- data.vg[complete.cases(data.vg), ]
print("Con complete.cases():")
print(head(df_sin_na))
cat("Filas después de complete.cases():", nrow(df_sin_na), "\n")
dim(df_sin_na)
summary(df_sin_na$Global_Sales)
hist(df_sin_na$Global_Sales)
hist(filter(df_sin_na, Global_Sales < 5)$Global_Sales)
set.seed(123)
N <- dim(df_sin_na)[1]
indices_muestra <- sample(1:N,200, replace = TRUE);
data.muestra <- df_sin_na[indices_muestra,]
summary(data.muestra)
set.seed(123)
N <- dim(df_sin_na)[1]
indices_muestra <- sample(1:N,200, replace = TRUE);
data.muestra <- df_sin_na[indices_muestra,]
summary(data.muestra$Global_Sales)
set.seed(123)
muestra <- sample_n(df_sin_na,300)
media_muestra_year <- mean(muestra$Year); media_muestra_year
sd_muestra_year <- sd(muestra$Year); sd_muestra_year
media_NA_sales <- mean(muestra$NA_Sales) ;media_NA_sales
sd_NA_sales <- sd(muestra$NA_Sales); sd_NA_sales
media_EU_sales <- mean(muestra$EU_Sales); media_EU_sales
sd_EU_sales <- sd(muestra$EU_Sales); sd_EU_sales
media_JP_sales <- mean(muestra$JP_Sales); media_JP_sales
sd_JP_sales <- sd(muestra$JP_Sales); sd_JP_sales
media_other_sales <- mean(muestra$Other_Sales); media_other_sales
sd_other_sales <- sd(muestra$Other_Sales); sd_other_sales
media_global_sales <- mean(muestra$Global_Sales) ; media_global_sales
sd_global_sales <- sd(muestra$Global_Sales); sd_global_sales
df <- filter(data.vg,NA_Sales<2.5)
# Histograma agrupado por categoría
ggplot( df , aes(x = NA_Sales)) +
geom_histogram(position = "dodge", alpha = 0.7, bins = 20) +
labs(title = "Histograma Agrupado de Ventas por Ano",
x = "Ventas",
y = "Frecuencia") +
theme_minimal()
